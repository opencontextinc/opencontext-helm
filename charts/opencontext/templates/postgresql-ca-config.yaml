{{- if .Values.postgresql.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "opencontext.fullname" . }}-postgres-ca
  labels:
    {{- include "opencontext.postgresql.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  {{ .Values.global.postgresql.caFilename }}: |
{{ include "opencontext.postgresql.generateCA" . | indent 4}}
{{- else }}
{{- $caConfig := printf "%s-postgres-ca"  (include "opencontext.fullname" .) }}
{{- $secretObj := (lookup "v1" "ConfigMap" .Release.Namespace $caConfig).data | default dict }}
{{- if not (hasKey $secretObj "ca.crt") }}
{{- fail (printf "\n\nPlease create the '%s' configmap with the CA certificate for your existing postgresql:\n  kubectl create configmap %s --from-file=ca.crt=/$PATH_TO/ca.crt --namespace %s \n" $caConfig $caConfig .Release.Namespace) }}
{{- end }}
{{- end }}
